[
  {
    "url": "https://api.github.com/repos/azam/azam.github.io/issues/4",
    "repository_url": "https://api.github.com/repos/azam/azam.github.io",
    "labels_url": "https://api.github.com/repos/azam/azam.github.io/issues/4/labels{/name}",
    "comments_url": "https://api.github.com/repos/azam/azam.github.io/issues/4/comments",
    "events_url": "https://api.github.com/repos/azam/azam.github.io/issues/4/events",
    "html_url": "https://github.com/azam/azam.github.io/issues/4",
    "id": 1786392020,
    "node_id": "I_kwDOAsg0Zc5qei3U",
    "number": 4,
    "title": "Home Assistant on Raspberry Pi 3",
    "user": {
      "login": "azam",
      "id": 2863538,
      "node_id": "MDQ6VXNlcjI4NjM1Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2863538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azam",
      "html_url": "https://github.com/azam",
      "followers_url": "https://api.github.com/users/azam/followers",
      "following_url": "https://api.github.com/users/azam/following{/other_user}",
      "gists_url": "https://api.github.com/users/azam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azam/subscriptions",
      "organizations_url": "https://api.github.com/users/azam/orgs",
      "repos_url": "https://api.github.com/users/azam/repos",
      "events_url": "https://api.github.com/users/azam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 5471855283,
        "node_id": "LA_kwDOAsg0Zc8AAAABRiXisw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/publish",
        "name": "publish",
        "color": "93B6BC",
        "default": false,
        "description": ""
      },
      {
        "id": 5692784483,
        "node_id": "LA_kwDOAsg0Zc8AAAABU1D_Yw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/raspberrypi",
        "name": "raspberrypi",
        "color": "EE5A0D",
        "default": false,
        "description": ""
      },
      {
        "id": 5692786772,
        "node_id": "LA_kwDOAsg0Zc8AAAABU1EIVA",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/homeassistant",
        "name": "homeassistant",
        "color": "7BB1D2",
        "default": false,
        "description": ""
      },
      {
        "id": 5699651519,
        "node_id": "LA_kwDOAsg0Zc8AAAABU7nHvw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/python",
        "name": "python",
        "color": "E2EBB3",
        "default": false,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-07-03T15:19:11Z",
    "updated_at": "2023-07-05T08:49:28Z",
    "closed_at": null,
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "Attempting to host all my home automations from Google Home to Home Assistant and since I have a Raspberry Pi Model 3B lying around, this is a record of my setup of Home Assistant on it.\r\n\r\nThis instruction might be useful if you want to have a lean installation on Raspberry Pi, and you are running other services on it as well. I recommend using [Home Assistant OS](https://www.home-assistant.io/installation/raspberrypi/#install-home-assistant-operating-system) for single usage, or use the [containerized version](https://www.home-assistant.io/installation/raspberrypi/#install-home-assistant-container) if you are fine with some Docker overhead.\r\n\r\n## Base OS\r\n\r\n1. *(Optional)* Set static IP address for Raspberry Pi's wired and wireless adapter's MAC address on DHCP server/router. (hereon using  IP `192.168.3.142`)\r\n2. Using Raspberry Pi Imager, install Raspberry OS Lite (64-bit) on SD card.\r\n    * Create user and password on *Settings* before writing the image. (hereon using user `admin`)\r\n4. Insert SD card and power on.\r\n5. Login to Raspberry Pi.\r\n    ```shell\r\n    ssh admin@192.168.3.142\r\n    ```\r\n6. Increase swap partition.\r\n    1. Turn swap off\r\n        ```shell\r\n        sudo dphys-swapfile swapoff\r\n        ```\r\n    2. Open `/etc/dphys-swapfile` for edit.\r\n        ```shell\r\n        sudo vi /etc/dphys-swapfile\r\n        ```\r\n    4. Change the following line. Unit is megabytes.\r\n        ```\r\n        CONF_SWAPSIZE=100\r\n        ```\r\n        to\r\n        ```\r\n        CONF_SWAPSIZE=512\r\n        ```\r\n    5. Save and exit editor.\r\n    6. Recreate swap file and turn swap back on.\r\n        ```shell\r\n        sudo dphys-swapfile setup\r\n        sudo dphys-swapfile swapon\r\n        ```\r\n7. *(Optional)* Add MPEG and VC1 decoder license keys.\r\n    1. Open `/boot/config.txt` for edit.\r\n        ```shell\r\n        sudo vi /boot/config.txt\r\n        ```\r\n    2. Add the following line (either on anonymous section or `[all]`). Replace `0xdeadbeef` with your key:\r\n        ```shell\r\n        # License keys for hardware accelerated video codec\r\n        decode_MPG2=0xdeadbeef\r\n        decode_WVC1=0xdeadbeef\r\n        ```\r\n    3. Save and exit editor.\r\n8. Update system and packages.\r\n    ```shell\r\n    sudo apt update\r\n    sudo apt full-upgrade\r\n    sudo shutdown -r now\r\n    ```\r\n\r\n## Home Assistant\r\n\r\nThese instructions deviate from the official Home Assistant Core installation steps, because we are using `pyenv` to provide Python runtime and virtualenv.\r\n\r\n1. Install Python and pyenv build dependencies.\r\n    ```shell\r\n    sudo apt install \\\r\n      autoconf \\\r\n      build-essential \\\r\n      pkg-config \\\r\n      gdb \\\r\n      lcov \\\r\n      llvm \\\r\n      tzdata \\\r\n      ffmpeg \\\r\n      bluez \\\r\n      lzma \\\r\n      lzma-dev \\\r\n      uuid-dev \\\r\n      libatlas-base-dev \\\r\n      libbz2-dev \\\r\n      libffi-dev \\\r\n      libgdbm-dev \\\r\n      libgdbm-compat-dev \\\r\n      libjpeg-dev \\\r\n      liblapack3 \\\r\n      liblapack-dev \\\r\n      liblzma-dev \\\r\n      libncurses5-dev \\\r\n      libopenjp2-7 \\\r\n      libreadline6-dev \\\r\n      libssl-dev \\\r\n      libsqlite3-dev \\\r\n      libtiff5 \\\r\n      libturbojpeg0-dev \\\r\n      zlib1g-dev\r\n    ```\r\n2. Create `homeassistant` user and switch user to it.\r\n    ```shell\r\n    sudo useradd -rm homeassistant -G dialout,gpio,i2c\r\n    sudo -u homeassistant -H -s\r\n    ```\r\n3. Install `pyenv` as `homeassistant`.\r\n    ```shell\r\n    cd ~\r\n    curl https://pyenv.run | bash\r\n    echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.bashrc\r\n    echo 'command -v pyenv >/dev/null || export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.bashrc\r\n    echo 'eval \"$(pyenv init -)\"' >> ~/.bashrc\r\n    echo 'eval \"$(pyenv virtualenv-init -)\"' >> ~/.bashrc\r\n    ```\r\n4. Install Python 3.11 on `pyenv`. As of writing, Home Assistant 2023.6 requires at least Python 3.10 and Raspberry Pi OS uses Python 3.9.\r\n    ```shell\r\n    pyenv install 3.11.3\r\n    ```\r\n5. Create and activate virtualenv.\r\n    ```shell\r\n    pyenv virtualenv 3.11.3 homeassistant\r\n    pyenv activate homeassistant\r\n    ```\r\n6. Install homeassistant.\r\n    ```shell\r\n    python3 -m pip install wheel\r\n    pip3 install homeassistant==2023.6.3\r\n    ```\r\n7. Run homeassistant for the first time.\r\n    ```shell\r\n    hass\r\n    ```\r\n8. You're done! Access the frontend at `http://192.168.3.142:8123`.\r\n\r\n## *(Optional)* Updating homeassistant\r\n\r\nThere will be time where you would want to update Python. We can do that by installing a new Python version and swap the virtualenv environment.\r\n\r\n1. *(Optional)* Switch to `homeassistant` user if you are not one.\r\n    ```shell\r\n    sudo -u homeassistant -H -s\r\n    ```\r\n2. Install new Python version\r\n    ```shell\r\n    pyenv install 3.11.4\r\n    ```\r\n3. Switch virtualenv to new version\r\n    ```shell\r\n    pyenv activate homeassistant\r\n    pip freeze > requirements-lock.txt\r\n    pyenv deactivate\r\n    pyenv virtualenv-delete homeassistant\r\n    pyenv virtualenv 3.11.4 homeassistant\r\n    pyenv activate homeassistant\r\n    pip install -r requirements-lock.txt\r\n    ```\r\n4. Restart homeassistant\r\n    ```shell\r\n    hass\r\n    ```\r\n\r\n## Reference\r\n\r\n* [Home Assistant > Installation > Raspberry Pi](https://www.home-assistant.io/installation/raspberrypi)\r\n* [Home Assistant > Common Tasks](https://www.home-assistant.io/common-tasks/os)\r\n* [pyenv](https://github.com/pyenv/pyenv)\r\n* [pyenv-virtualenv](https://github.com/pyenv/pyenv-virtualenv)\r\n* [StackOverflow > How can I upgrade Python version and packages in pyenv virtualenv?](https://stackoverflow.com/questions/44692668)",
    "reactions": {
      "url": "https://api.github.com/repos/azam/azam.github.io/issues/4/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/azam/azam.github.io/issues/4/timeline",
    "performed_via_github_app": null,
    "state_reason": null
  },
  {
    "url": "https://api.github.com/repos/azam/azam.github.io/issues/3",
    "repository_url": "https://api.github.com/repos/azam/azam.github.io",
    "labels_url": "https://api.github.com/repos/azam/azam.github.io/issues/3/labels{/name}",
    "comments_url": "https://api.github.com/repos/azam/azam.github.io/issues/3/comments",
    "events_url": "https://api.github.com/repos/azam/azam.github.io/issues/3/events",
    "html_url": "https://github.com/azam/azam.github.io/issues/3",
    "id": 1702930297,
    "node_id": "I_kwDOAsg0Zc5lgKd5",
    "number": 3,
    "title": "Re: twemoji",
    "user": {
      "login": "azam",
      "id": 2863538,
      "node_id": "MDQ6VXNlcjI4NjM1Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2863538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azam",
      "html_url": "https://github.com/azam",
      "followers_url": "https://api.github.com/users/azam/followers",
      "following_url": "https://api.github.com/users/azam/following{/other_user}",
      "gists_url": "https://api.github.com/users/azam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azam/subscriptions",
      "organizations_url": "https://api.github.com/users/azam/orgs",
      "repos_url": "https://api.github.com/users/azam/repos",
      "events_url": "https://api.github.com/users/azam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 5471855283,
        "node_id": "LA_kwDOAsg0Zc8AAAABRiXisw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/publish",
        "name": "publish",
        "color": "93B6BC",
        "default": false,
        "description": ""
      },
      {
        "id": 5485200810,
        "node_id": "LA_kwDOAsg0Zc8AAAABRvGFqg",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/unicode",
        "name": "unicode",
        "color": "7D0330",
        "default": false,
        "description": ""
      },
      {
        "id": 5485201019,
        "node_id": "LA_kwDOAsg0Zc8AAAABRvGGew",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/emoji",
        "name": "emoji",
        "color": "E54A5A",
        "default": false,
        "description": ""
      },
      {
        "id": 5485201173,
        "node_id": "LA_kwDOAsg0Zc8AAAABRvGHFQ",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/i18n",
        "name": "i18n",
        "color": "CA656A",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-05-10T00:40:34Z",
    "updated_at": "2023-05-10T00:50:52Z",
    "closed_at": "2023-05-10T00:42:50Z",
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "I love [`twemoji`](https://github.com/twitter/twemoji).\r\n\r\nI use it for my offline SNS viewer apps, and also some small apps to preview posts. The biggest advantage of using `twemoji` over system or web fonts for web apps, is that you will get a consistent look, color and size across all platforms, and you only download the glyphs that is on your page.\r\n\r\nI try to keep my mobile apps to a minimal, and use Twitter's web app instead of the native mobile app. Adoption of Unicode 15 on Twitter's web app was slow and buggy (black bird 🐦‍⬛  is still not rendered properly). The emoji is composed of a bird (🐦 U+1F426), a zero-width joiner (U+200D) and black(⬛ U+2B1B). There's a lot of emoji that are similarly composed, and I suppose it would be a snap to add it once you have the image ready, since `twemoji` is already doing this, which is why I like using the library; pretty good support and implementation of matching raw string to its emoji glyph.\r\n\r\nAs part of Elon Musk's takeover of Twitter, the team maintaining the library was layed off, and development stalled. Along with it is the copyright for the images created after the acquisition. The original twemoji library attributes its graphics as [`CC-BY 4.0`](https://github.com/twitter/twemoji/blob/master/LICENSE-GRAPHICS), but since there is no update after the acquisition, we would have to wait for a motivated Twitter engineer to update the library, if they are even allowed to.\r\n\r\nComing to the rescue is ex-Twitter engineer [jdecked](https://github.com/jdecked), who was part of the team maintaining the library forked it to [`jdecked/twemoji`](https://github.com/jdecked/twemoji) and looks promising. They fixed longstanding issues (personally thankful for fixing the wrong stripes on Malaysia flag [here](https://github.com/jdecked/twemoji/releases/tag/v14.1.1)), and are working on adding new emoji sets introduced in Unicode 15 [here](https://github.com/jdecked/twemoji/issues/8).  Would definitely switch over to the forked library once the new emojis are in.\r\n\r\nBlack is always a thing of mine, so I am hoping to be able to use the black bird emoji on my apps and rooting on the fork 💩",
    "reactions": {
      "url": "https://api.github.com/repos/azam/azam.github.io/issues/3/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/azam/azam.github.io/issues/3/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/azam/azam.github.io/issues/2",
    "repository_url": "https://api.github.com/repos/azam/azam.github.io",
    "labels_url": "https://api.github.com/repos/azam/azam.github.io/issues/2/labels{/name}",
    "comments_url": "https://api.github.com/repos/azam/azam.github.io/issues/2/comments",
    "events_url": "https://api.github.com/repos/azam/azam.github.io/issues/2/events",
    "html_url": "https://github.com/azam/azam.github.io/issues/2",
    "id": 1701164374,
    "node_id": "I_kwDOAsg0Zc5lZbVW",
    "number": 2,
    "title": "Copyleft in audio/video libraries",
    "user": {
      "login": "azam",
      "id": 2863538,
      "node_id": "MDQ6VXNlcjI4NjM1Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2863538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azam",
      "html_url": "https://github.com/azam",
      "followers_url": "https://api.github.com/users/azam/followers",
      "following_url": "https://api.github.com/users/azam/following{/other_user}",
      "gists_url": "https://api.github.com/users/azam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azam/subscriptions",
      "organizations_url": "https://api.github.com/users/azam/orgs",
      "repos_url": "https://api.github.com/users/azam/repos",
      "events_url": "https://api.github.com/users/azam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 5471855283,
        "node_id": "LA_kwDOAsg0Zc8AAAABRiXisw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/publish",
        "name": "publish",
        "color": "93B6BC",
        "default": false,
        "description": ""
      },
      {
        "id": 5481104128,
        "node_id": "LA_kwDOAsg0Zc8AAAABRrMDAA",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/mpeg",
        "name": "mpeg",
        "color": "EA8392",
        "default": false,
        "description": ""
      },
      {
        "id": 5481104311,
        "node_id": "LA_kwDOAsg0Zc8AAAABRrMDtw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/rust",
        "name": "rust",
        "color": "95B7E2",
        "default": false,
        "description": ""
      },
      {
        "id": 5481104562,
        "node_id": "LA_kwDOAsg0Zc8AAAABRrMEsg",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/media",
        "name": "media",
        "color": "B2D0EE",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": {
      "login": "azam",
      "id": 2863538,
      "node_id": "MDQ6VXNlcjI4NjM1Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2863538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azam",
      "html_url": "https://github.com/azam",
      "followers_url": "https://api.github.com/users/azam/followers",
      "following_url": "https://api.github.com/users/azam/following{/other_user}",
      "gists_url": "https://api.github.com/users/azam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azam/subscriptions",
      "organizations_url": "https://api.github.com/users/azam/orgs",
      "repos_url": "https://api.github.com/users/azam/repos",
      "events_url": "https://api.github.com/users/azam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azam/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "azam",
        "id": 2863538,
        "node_id": "MDQ6VXNlcjI4NjM1Mzg=",
        "avatar_url": "https://avatars.githubusercontent.com/u/2863538?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/azam",
        "html_url": "https://github.com/azam",
        "followers_url": "https://api.github.com/users/azam/followers",
        "following_url": "https://api.github.com/users/azam/following{/other_user}",
        "gists_url": "https://api.github.com/users/azam/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/azam/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/azam/subscriptions",
        "organizations_url": "https://api.github.com/users/azam/orgs",
        "repos_url": "https://api.github.com/users/azam/repos",
        "events_url": "https://api.github.com/users/azam/events{/privacy}",
        "received_events_url": "https://api.github.com/users/azam/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-05-09T01:38:37Z",
    "updated_at": "2023-05-09T01:51:05Z",
    "closed_at": "2023-05-09T01:51:05Z",
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "These are some thoughts when trying to implement a MPEG-DASH streaming backend on Rust.\r\n  \r\nI found out that a lot of media related libraries such as the almighty [`FFmpeg`](https://ffmpeg.org/), are GPL or LGPL. This sort of sets the landscape for other media-related projects to be GPL, since it eases linking to `FFmpeg` without delegating to spawning an external process to intereface with it, and also asking users to install `FFmpeg` separately.\r\n  \r\nHowever if you have to link to `FFmpeg` for whatever reason, there is an option to link it as LGPL (basically it is about building `FFmpeg` minus its GPL dependencies) and keep your current license. As it goes for most copyleft projects, there are other non-technical requirements like provisioning a way to distribute `FFmpeg` source etc. They have a good checklist on how to comply on their legal page ([here](https://ffmpeg.org/legal.html)).\r\n  \r\nMeanwhile, I would like to keep my projects on the more open MIT/BSD licenses, and also viably sustainable to use by me and also implementors, so naturally I want to avoid dependencies with copyleft licenses. The good thing is that I do not need an all-in-one library, so that makes it a little easier to find for existing implementations. Smaller scoped, single purpose libraries tends to have a more open license. Excellent libraries such as [`mp4-rust`](https://github.com/alfg/mp4-rust), and [`rust-id3`](https://github.com/polyfloyd/rust-id3) exists in non-copyleft licenses. I hope there is a trend for these single purpose libraries to keep being non-copyleft licenses.\r\n  \r\nOn a sidenote, I use [`cargo-deny`](https://github.com/EmbarkStudios/cargo-deny) with the following `deny.toml` file and add `cargo deny check license` on CI to make sure that I don't accidentally infect myself with copyleft dependencies.\r\n\r\n```toml\r\n[licenses]\r\nunlicensed = \"deny\"\r\nallow-osi-fsf-free = \"both\"\r\n# We want to deny GPL-like crates\r\ncopyleft = \"deny\"\r\ndefault = \"deny\"\r\nallow = [\r\n    # Approved: used in ring\r\n    \"OpenSSL\",\r\n    # Approved: used in unicode-ident\r\n    \"Unicode-DFS-2016\",\r\n]\r\n\r\n# See https://github.com/briansmith/ring/blob/main/LICENSE for clarification.\r\n# ring LICENSE file is more on exlpaining all licenses used, but crate itself is mostly ISC-like.\r\n[[licenses.clarify]]\r\nname = \"ring\"\r\nexpression = \"MIT AND ISC AND OpenSSL\"\r\nlicense-files = [\r\n    { path = \"LICENSE\", hash = 0xbd0eed23 }\r\n]\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/azam/azam.github.io/issues/2/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/azam/azam.github.io/issues/2/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  },
  {
    "url": "https://api.github.com/repos/azam/azam.github.io/issues/1",
    "repository_url": "https://api.github.com/repos/azam/azam.github.io",
    "labels_url": "https://api.github.com/repos/azam/azam.github.io/issues/1/labels{/name}",
    "comments_url": "https://api.github.com/repos/azam/azam.github.io/issues/1/comments",
    "events_url": "https://api.github.com/repos/azam/azam.github.io/issues/1/events",
    "html_url": "https://github.com/azam/azam.github.io/issues/1",
    "id": 1698536687,
    "node_id": "I_kwDOAsg0Zc5lPZzv",
    "number": 1,
    "title": "ffmpeg on macOS High Sierra",
    "user": {
      "login": "azam",
      "id": 2863538,
      "node_id": "MDQ6VXNlcjI4NjM1Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2863538?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/azam",
      "html_url": "https://github.com/azam",
      "followers_url": "https://api.github.com/users/azam/followers",
      "following_url": "https://api.github.com/users/azam/following{/other_user}",
      "gists_url": "https://api.github.com/users/azam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/azam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/azam/subscriptions",
      "organizations_url": "https://api.github.com/users/azam/orgs",
      "repos_url": "https://api.github.com/users/azam/repos",
      "events_url": "https://api.github.com/users/azam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/azam/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 5471855283,
        "node_id": "LA_kwDOAsg0Zc8AAAABRiXisw",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/publish",
        "name": "publish",
        "color": "93B6BC",
        "default": false,
        "description": ""
      },
      {
        "id": 5481104128,
        "node_id": "LA_kwDOAsg0Zc8AAAABRrMDAA",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/mpeg",
        "name": "mpeg",
        "color": "EA8392",
        "default": false,
        "description": ""
      },
      {
        "id": 5485257876,
        "node_id": "LA_kwDOAsg0Zc8AAAABRvJklA",
        "url": "https://api.github.com/repos/azam/azam.github.io/labels/macos",
        "name": "macos",
        "color": "D5F134",
        "default": false,
        "description": ""
      }
    ],
    "state": "closed",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2023-05-06T08:34:19Z",
    "updated_at": "2023-05-10T05:24:01Z",
    "closed_at": "2023-05-09T00:55:56Z",
    "author_association": "OWNER",
    "active_lock_reason": null,
    "body": "A high number casks on Homebrew are currently not installable on macOS High Sierra, or any versions older than Catalina (10.15),mostly due to dependency on updated versions of Xcode. Some workarounds would be installing older versions of the cask, or fight the errors one by one.\r\n\r\nThe case for `ffmpeg` (version 6.0 atm) is that its dependencies are not pegged to specific versions, so brew will try to install the latest versions for it. My way to resolve it is to force `brew` to use `llvm@15` and use that to install `ffmpeg`. The instructions are as follows:\r\n\r\n```sh\r\nbrew install llvm@15\r\nbrew link llvm@15\r\nsudo ln -s  /usr/local/opt/llvm@15 /usr/local/opt/llvm\r\nbrew install harfbuzz --cc=llvm_clang\r\nbrew install ffmpeg\r\n```\r\n\r\nHomebrew currently only supports macOS versions that Apple supports, which is understandable, given that you cannot viably provision CI's that run on older versions anymore, but I think there should be a way to easily compile a cask with pegged dependencies so that we can build it on specific versions that was supported on past versions. Most cask just provide a dependency list without a pegged version (which will use the most recent versions of it) and there is no easy way to change the dependency versions, which just  a big pain for people running on older macOS.\r\n\r\nI have a MacBook Pro (13-inch, Late 2011) and High Sierra is the latest version it can run on, without resorting to use [OpenCore Legacy Patcher](https://dortania.github.io/OpenCore-Legacy-Patcher/). The hardware is still solid, good preformance for development even today. Ubuntu runs butterly-smooth as it was before. My main machine is also of the same generation (Intel Core i7-2600k) and Windows have way better backwards compatibility on it.\r\n\r\nI cannot build iOS apps that is publishable to the App Store on the MBP anymore, so that nailed the last reason for me to keep it on macOS.\r\n\r\n![Screen Shot 2023-04-19 at 14 46 31](https://github.com/azam/azam.github.io/assets/2863538/04500f4f-2ee3-4588-8621-eca4df523aab)",
    "reactions": {
      "url": "https://api.github.com/repos/azam/azam.github.io/issues/1/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "timeline_url": "https://api.github.com/repos/azam/azam.github.io/issues/1/timeline",
    "performed_via_github_app": null,
    "state_reason": "completed"
  }
]
